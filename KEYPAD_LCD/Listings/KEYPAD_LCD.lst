C51 COMPILER V9.60.7.0   KEYPAD_LCD                                                        03/14/2023 23:11:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEYPAD_LCD
OBJECT MODULE PLACED IN .\Objects\KEYPAD_LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE KEYPAD_LCD.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\KEYPAD_LCD.lst) TABS(2) OBJECT(.\Objects\KEYPAD_LCD.obj)

line level    source

   1          #include <REGX51.H>
   2          #define LCD_data P2
   3          #define KEY_pad P1
   4          
   5          sbit rs = P3^0;
   6          sbit en = P3^1;
   7          unsigned LCD_Curs_pos =0;
   8          
   9          
  10          void delay (unsigned del);
  11          void LCD_commande (unsigned char ch);
  12          void LCD_display (unsigned char ch);
  13          void LCD_display_str (unsigned char *str);
  14          char KEY_GET (void);
  15            
  16          void main(void){
  17   1        
  18   1        char key_value = 0;
  19   1        LCD_commande(0x38); // function set 2line 5x7 dote
  20   1        LCD_commande(0x0C); // display on cursor off
  21   1        
  22   1        
  23   1        while(1){
  24   2          if(LCD_Curs_pos < 16){
  25   3            LCD_commande(0x80 + LCD_Curs_pos);
  26   3            }
  27   2          if(LCD_Curs_pos >= 16){
  28   3            LCD_commande(0xC0 + LCD_Curs_pos - 16);
  29   3            }
  30   2          if(LCD_Curs_pos >= 32){
  31   3            LCD_commande(0x01);
  32   3            LCD_Curs_pos =0;
  33   3            }
  34   2          
  35   2          key_value = KEY_GET();
  36   2          LCD_display(key_value);
  37   2          delay(3);
  38   2          
  39   2          
  40   2        }
  41   1        }
  42            
  43          
  44          
  45            
  46            
  47          // Display on LCD
  48            
  49          void LCD_display (unsigned char ch){
  50   1        
  51   1        LCD_data = ch;
  52   1        rs = 1;
  53   1        en = 1;
  54   1        delay(3);
C51 COMPILER V9.60.7.0   KEYPAD_LCD                                                        03/14/2023 23:11:37 PAGE 2   

  55   1        en = 0;
  56   1      } 
  57          void LCD_display_str (unsigned char *str){
  58   1        
  59   1        unsigned flag = 0;
  60   1        unsigned flag2 =0;
  61   1        unsigned loop = 0;
  62   1        unsigned loop2 = 0;
  63   1        
  64   1        for(loop=0;str[loop]!='\0';loop++){
  65   2          
  66   2          if((loop<16) || (loop2<16)){
  67   3            LCD_display(str[loop]);
  68   3            loop2+=1;
  69   3          }
  70   2          else if((loop<32) || (loop2<32)){
  71   3            if(flag ==1){LCD_display(str[loop]);loop2+=1;}
  72   3            else{
  73   4              flag =1;
  74   4              LCD_commande(0xC0);
  75   4              LCD_display(str[loop]);
  76   4              loop2+=1;
  77   4            }
  78   3          }
  79   2          else{
  80   3              flag2 =1;
  81   3              LCD_commande(0x01);
  82   3              LCD_commande(0x80);
  83   3              LCD_display(str[loop]);
  84   3              loop2 = 1;
  85   3              flag =0;
  86   3            }     
  87   2          
  88   2        } 
  89   1      }
  90          //  keypad commande
  91          char KEY_GET (void){
  92   1        
  93   1        char key_value = 0;
  94   1        
  95   1        KEY_pad = 0xFE;
  96   1        if(KEY_pad == 0xEE){
  97   2          key_value = '1';
  98   2          LCD_Curs_pos++;
  99   2          }
 100   1        if(KEY_pad == 0xDE){
 101   2          key_value = '2';
 102   2          LCD_Curs_pos++;
 103   2          }
 104   1        if(KEY_pad == 0xBE){
 105   2          key_value = '3';
 106   2          LCD_Curs_pos++;
 107   2          }
 108   1        
 109   1        KEY_pad = 0xFD;
 110   1        if(KEY_pad == 0xED){
 111   2          key_value = '4';
 112   2          LCD_Curs_pos++;
 113   2          }
 114   1        if(KEY_pad == 0xDD){
 115   2          key_value = '5';
 116   2          LCD_Curs_pos++;
C51 COMPILER V9.60.7.0   KEYPAD_LCD                                                        03/14/2023 23:11:37 PAGE 3   

 117   2          }
 118   1        if(KEY_pad == 0xBD){
 119   2          key_value = '6';
 120   2          LCD_Curs_pos++;
 121   2          }
 122   1        
 123   1        KEY_pad = 0xFB; 
 124   1        if(KEY_pad == 0xEB){
 125   2          key_value = '7';
 126   2          LCD_Curs_pos++;
 127   2          }
 128   1        if(KEY_pad == 0xDB){
 129   2          key_value = '8';
 130   2          LCD_Curs_pos++;
 131   2          }
 132   1        if(KEY_pad == 0xBB){
 133   2          key_value = '9';
 134   2          LCD_Curs_pos++;
 135   2          }
 136   1        
 137   1        KEY_pad = 0xF7;
 138   1        if(KEY_pad == 0xE7){
 139   2          key_value = '*';
 140   2          LCD_Curs_pos++;
 141   2          }
 142   1        if(KEY_pad == 0xD7){
 143   2          key_value = '0';
 144   2          LCD_Curs_pos++;
 145   2          }
 146   1        if(KEY_pad == 0xB7){
 147   2          key_value = '#';
 148   2          LCD_Curs_pos++;
 149   2          } 
 150   1        
 151   1          return key_value;
 152   1        
 153   1      } 
 154          //  LCD commande
 155          void LCD_commande (unsigned char ch){
 156   1        
 157   1        LCD_data = ch;
 158   1        rs = 0;
 159   1        en = 1;
 160   1        delay(10);
 161   1        en = 0;
 162   1      } 
 163            
 164          // DELAY
 165          void delay (unsigned del){
 166   1        
 167   1        unsigned loop = 0;
 168   1        unsigned delay_gen = 0;
 169   1        
 170   1        for(loop=0;loop<del;loop++){
 171   2          for(delay_gen=0;delay_gen<10000;delay_gen++);
 172   2        }
 173   1      
 174   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    558    ----
C51 COMPILER V9.60.7.0   KEYPAD_LCD                                                        03/14/2023 23:11:37 PAGE 4   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
