C51 COMPILER V9.60.7.0   OBSTACLE_AVOIDANCE                                                03/12/2023 16:31:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OBSTACLE_AVOIDANCE
OBJECT MODULE PLACED IN .\Objects\OBSTACLE_Avoidance.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE OBSTACLE_Avoidance.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\OBSTACLE_Avoidance.lst) TABS(2) OBJECT(.\Objects\OBSTACLE_Avoidance.obj)

line level    source

   1          #include <REGX51.H>
   2          
   3          sbit R_sensor = P1^0;
   4          sbit F_sensor = P1^1;
   5          sbit L_sensor = P1^2;
   6          sbit motorR_D1 = P2^0;
   7          sbit motorR_D2 = P2^1;
   8          sbit motorL_D1 = P2^2;
   9          sbit motorL_D2 = P2^3;
  10          sbit led = P2^4;
  11          
  12          
  13          void delay (unsigned del);
  14          void motorR_clk_Direction (void);
  15          void motorR_non_clk_Direction (void);
  16          void motorR_stop (void);
  17          void motorL_clk_Direction (void);
  18          void motorL_non_clk_Direction (void);
  19          void motorL_stop (void);
  20          void start (void);
  21          
  22          void main(void){
  23   1        
  24   1        R_sensor = 0;
  25   1        F_sensor = 0;
  26   1        L_sensor = 0;
  27   1        
  28   1        while(1){
  29   2          
  30   2          if ( R_sensor == 0 && L_sensor == 1 && F_sensor == 0){
  31   3            
  32   3            motorR_clk_Direction();
  33   3            motorL_stop();
  34   3          }
  35   2          if ( R_sensor == 1 && L_sensor == 0 && F_sensor == 0){
  36   3            
  37   3            motorL_clk_Direction();
  38   3            motorR_stop();
  39   3          }
  40   2          
  41   2          if ((R_sensor == 0 && L_sensor == 0 && F_sensor == 0) || (R_sensor == 1 && L_sensor == 1 && F_sensor == 
             -0)){
  42   3            
  43   3            motorR_clk_Direction();
  44   3            motorL_clk_Direction();
  45   3          }
  46   2          if ( (R_sensor == 0 && L_sensor == 0 && F_sensor == 1) || ( R_sensor == 0 && L_sensor == 1 && F_sensor =
             -= 1)){
  47   3            
  48   3            
  49   3            motorL_stop();
  50   3            motorR_clk_Direction();     
  51   3          }
  52   2          
C51 COMPILER V9.60.7.0   OBSTACLE_AVOIDANCE                                                03/12/2023 16:31:10 PAGE 2   

  53   2          if ( R_sensor == 1 && L_sensor == 0 && F_sensor == 1){
  54   3            
  55   3            motorR_stop();
  56   3            
  57   3            
  58   3            motorL_clk_Direction();
  59   3          }
  60   2          if ( R_sensor == 1 && L_sensor == 1 && F_sensor == 1){
  61   3            
  62   3            motorR_stop();
  63   3            motorL_stop();
  64   3            start();
  65   3          }
  66   2          
  67   2        }
  68   1        }
  69            
  70          
  71          
  72          //  RIGHT MOTOR
  73          void motorR_clk_Direction (void){
  74   1        motorR_D1 = 1;
  75   1        motorR_D2 = 0;
  76   1      }
  77          void motorR_non_clk_Direction (void){
  78   1          motorR_D1 = 0;
  79   1          motorR_D2 = 1;
  80   1      }
  81          void motorR_stop (void){
  82   1          motorR_D1 = 0;
  83   1          motorR_D2 = 0;
  84   1      }
  85          
  86          
  87          //  LEFT MOTOR
  88          void motorL_clk_Direction (void){
  89   1        motorL_D1 = 1;
  90   1        motorL_D2 = 0;
  91   1      }
  92          void motorL_non_clk_Direction (void){
  93   1          motorL_D1 = 0;
  94   1          motorL_D2 = 1;
  95   1      }
  96          void motorL_stop (void){
  97   1          motorL_D1 = 0;
  98   1          motorL_D2 = 0;
  99   1      }
 100          
 101          
 102          
 103          void start (void){
 104   1        unsigned i = 0;
 105   1        for(i=0;i<5;i++){
 106   2          led = ~led;
 107   2          delay(8);
 108   2        }
 109   1          
 110   1      }
 111          
 112          void delay (unsigned del){
 113   1        
 114   1        unsigned loop = 0;
C51 COMPILER V9.60.7.0   OBSTACLE_AVOIDANCE                                                03/12/2023 16:31:10 PAGE 3   

 115   1        unsigned delay_gen = 0;
 116   1        
 117   1        for(loop=0;loop<del;loop++){
 118   2          for(delay_gen=0;delay_gen<10000;delay_gen++);
 119   2        }
 120   1      
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    217    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
