C51 COMPILER V9.60.7.0   PASSWORD_KEYBOARD                                                 03/20/2023 22:11:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PASSWORD_KEYBOARD
OBJECT MODULE PLACED IN .\Objects\PASSWORD_KEYBOARD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE PASSWORD_KEYBOARD.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\PASSWORD_KEYBOARD.lst) TABS(2) OBJECT(.\Objects\PASSWORD_KEYBOARD.obj)

line level    source

   1          #include <REGX51.H>
   2          #include "string.H"
   3          
   4          #define LCD_data P2
   5          #define KEY_pad P1
   6          
   7          sbit rs = P3^0;
   8          sbit en = P3^1;
   9          sbit device = P3^2;
  10          
  11          unsigned LCD_Curs_pos =0;
  12          
  13          
  14          void delay (unsigned del);
  15          void LCD_commande (unsigned char ch);
  16          void LCD_display (unsigned char ch);
  17          void LCD_display_str (unsigned char *str);
  18          char KEY_GET (void);
  19            
  20          void main(void){
  21   1        
  22   1        char key_value = 0;
  23   1        unsigned int keyCnt = 0;
  24   1        unsigned int passCnt = 0;
  25   1        char Default_pass[5] = "6666";
  26   1        char Entred_pass[5];
  27   1        device = 0;
  28   1        LCD_commande(0x38); // function set 2line 5x7 dote
  29   1        LCD_commande(0x0C); // display on cursor off
  30   1        LCD_commande(0x06);
  31   1        LCD_commande(0x01); 
  32   1        LCD_display_str("Enter Password:  ");
  33   1        
  34   1        while(1){
  35   2          
  36   2          
  37   2          key_value = KEY_GET();
  38   2          
  39   2          if(key_value != 0){     
  40   3            Entred_pass[keyCnt] = key_value;
  41   3            LCD_commande(0xC0 + keyCnt);
  42   3            LCD_display('*');
  43   3            keyCnt = keyCnt + 1;        
  44   3          }
  45   2          if(keyCnt == 4){      
  46   3            LCD_commande(0x01);
  47   3            keyCnt = 0;
  48   3            passCnt = strcmp(Default_pass,Entred_pass);
  49   3            
  50   3            if(passCnt == 0){
  51   4              device = ~device;
  52   4              LCD_commande(0x80);
  53   4              LCD_display_str("Correct Password");
  54   4              LCD_commande(0xC0);
C51 COMPILER V9.60.7.0   PASSWORD_KEYBOARD                                                 03/20/2023 22:11:41 PAGE 2   

  55   4              LCD_display_str("#:start/*:cancel");
  56   4              delay(100);
  57   4            }
  58   3            else{       
  59   4              LCD_commande(0x80);
  60   4              LCD_display_str("Wrong Password");        
  61   4              delay(4);
  62   4              LCD_commande(0x01);
  63   4              LCD_display_str("Enter Password:  ");
  64   4            }
  65   3                
  66   3            
  67   3          }
  68   2          
  69   2        }
  70   1        }
  71            
  72          
  73          
  74            
  75            
  76          // Display on LCD
  77            
  78          void LCD_display (unsigned char ch){
  79   1        
  80   1        LCD_data = ch;
  81   1        rs = 1;
  82   1        en = 1;
  83   1        delay(3);
  84   1        en = 0;
  85   1      } 
  86          void LCD_display_str (unsigned char *str){
  87   1        
  88   1        unsigned flag = 0;
  89   1        unsigned flag2 =0;
  90   1        unsigned loop = 0;
  91   1        unsigned loop2 = 0;
  92   1        
  93   1        for(loop=0;str[loop]!='\0';loop++){
  94   2          
  95   2          if((loop<16) || (loop2<16)){
  96   3            LCD_display(str[loop]);
  97   3            loop2+=1;
  98   3          }
  99   2          else if((loop<32) || (loop2<32)){
 100   3            if(flag ==1){LCD_display(str[loop]);loop2+=1;}
 101   3            else{
 102   4              flag =1;
 103   4              LCD_commande(0xC0);
 104   4              LCD_display(str[loop]);
 105   4              loop2+=1;
 106   4            }
 107   3          }
 108   2          else{
 109   3              flag2 =1;
 110   3              LCD_commande(0x01);
 111   3              LCD_commande(0x80);
 112   3              LCD_display(str[loop]);
 113   3              loop2 = 1;
 114   3              flag =0;
 115   3            }     
 116   2          
C51 COMPILER V9.60.7.0   PASSWORD_KEYBOARD                                                 03/20/2023 22:11:41 PAGE 3   

 117   2        } 
 118   1      }
 119          //  keypad commande
 120          char KEY_GET (void){
 121   1        
 122   1        char key_value = 0;
 123   1        
 124   1        KEY_pad = 0xFE;
 125   1        if(KEY_pad == 0xEE){
 126   2          key_value = '1';
 127   2          LCD_Curs_pos++;
 128   2          }
 129   1        if(KEY_pad == 0xDE){
 130   2          key_value = '2';
 131   2          LCD_Curs_pos++;
 132   2          }
 133   1        if(KEY_pad == 0xBE){
 134   2          key_value = '3';
 135   2          LCD_Curs_pos++;
 136   2          }
 137   1        
 138   1        KEY_pad = 0xFD;
 139   1        if(KEY_pad == 0xED){
 140   2          key_value = '4';
 141   2          LCD_Curs_pos++;
 142   2          }
 143   1        if(KEY_pad == 0xDD){
 144   2          key_value = '5';
 145   2          LCD_Curs_pos++;
 146   2          }
 147   1        if(KEY_pad == 0xBD){
 148   2          key_value = '6';
 149   2          LCD_Curs_pos++;
 150   2          }
 151   1        
 152   1        KEY_pad = 0xFB; 
 153   1        if(KEY_pad == 0xEB){
 154   2          key_value = '7';
 155   2          LCD_Curs_pos++;
 156   2          }
 157   1        if(KEY_pad == 0xDB){
 158   2          key_value = '8';
 159   2          LCD_Curs_pos++;
 160   2          }
 161   1        if(KEY_pad == 0xBB){
 162   2          key_value = '9';
 163   2          LCD_Curs_pos++;
 164   2          }
 165   1        
 166   1        KEY_pad = 0xF7;
 167   1        if(KEY_pad == 0xE7){
 168   2          key_value = '*';
 169   2          LCD_Curs_pos++;
 170   2          }
 171   1        if(KEY_pad == 0xD7){
 172   2          key_value = '0';
 173   2          LCD_Curs_pos++;
 174   2          }
 175   1        if(KEY_pad == 0xB7){
 176   2          key_value = '#';
 177   2          LCD_Curs_pos++;
 178   2          } 
C51 COMPILER V9.60.7.0   PASSWORD_KEYBOARD                                                 03/20/2023 22:11:41 PAGE 4   

 179   1        
 180   1          return key_value;
 181   1        
 182   1      } 
 183          //  LCD commande
 184          void LCD_commande (unsigned char ch){
 185   1        
 186   1        LCD_data = ch;
 187   1        rs = 0;
 188   1        en = 1;
 189   1        delay(10);
 190   1        en = 0;
 191   1      } 
 192            
 193          // DELAY
 194          void delay (unsigned del){
 195   1        
 196   1        unsigned loop = 0;
 197   1        unsigned delay_gen = 0;
 198   1        
 199   1        for(loop=0;loop<del;loop++){
 200   2          for(delay_gen=0;delay_gen<10000;delay_gen++);
 201   2        }
 202   1      
 203   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    679    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
